in Heap we Use Priority Queue -> PriorityQueue<Integer> pq = new PriorityQueue<>(); //Bydefault in 
                                 ascending order
FUNCTIONS IN Priority Queue -> Same function tha are in queue[ only priority vice removal in this]

1) size() -> time complexity O(1)
2)isEmpty() -> O(1)
3)peek() -> O(1)
4)add()  -> log(n)
5)remove() -> log(n)

------------------------NOTE------------------------------

 1) PriorityQueue<Integer> pq = new PriorityQueue<>((a,b)->{
        //   return a - b; //this - other gives default behaviour [in ascending order]
            return b - a;  //other - this reverse of default behaviour
  }); 
        a,b  agar comparison krne ko bole toh 2 bnde require hai 1st is 'a' means (this(ham khud)) 
        and other is 'b' (other) , always compare to 'this' with 'other' and always think about own ie this

 2) 2.1) if a - b is -ve, then a is smaller
    2.2) if(a + b) is +ve, then a is bigger
    2.3) if( 0 ) means equal

 3) PriorityQueue<Integer> pq = new PriorityQueue<>((a,b)-> {
            return b - a;  //jo aage hoga vo ->  MEANS BDA HAI
 } 

